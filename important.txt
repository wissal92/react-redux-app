*************
ACTIONS
************
+ REPRESENT USER INTENT
+ MUST HAVE A TYPE


*************
REDUX STORE
*************

1) CAN DISPATCH AN ACTION => store.dispatch(action)
2) CAN SUBSCRIBE TO A LISTENER => store.subscribe(listener)
3) CAN GET STATE => store.getState()
4) CAN REPLACE REDUCER => replaceReducer(nextReducer)


*** THE ONLY WAY THE CHANGE THE DATA IN THE STORE IS BY DISPATCHING AN ACTION ****

*** WE SHOULD ONLY CLONE OBJECTS THAT NEED TO CHANGE AND AVOIDE DEEP CLONINIG TOOLS
BECAUSE DEEP CLONINIG WHEN IT IS UNNEEDED CAN BE VERY EXPENSIVE AND AS RESULT WE GET 
UNNECESSARY RENDERS ***


***************
HANDLING ARRAYS
****************
+ WE SHOULD AVOID => push/pop/reverse
+ WE SOULD USE => map/filter/reduce/concat/spread

*************************
HANDLING IMMUTABLE STATE
*************************

1) WITH NATIVE JS  => OBJECT.ASSIGN/SPREAD OPERATOR/MAP/FILTER/REDUCE

2) WITH LIBRARIES => IMMER/IMMUTABLE.JS/REACT-ADDONS-UPDATE ...ETC

************************
BENEFITS OF IMMUTABILITY
************************

IMMUTABILITY MAKES OUR APP MORE PREDICTABLE AND EASIER TO THINK ABOUT
AND IMPORVES THE PERFORMANCE SO INSTEAD OF RE-RENDERING EVERY SINGLE COMPONENT
THE ONES THAT HAVE A RELATION WITH THE CHANGED STATE WILL RE-RENDER BY COMPARING 
THE OLD AND NEW STATE REDUX KNOWS WHICH STATE HAS CHANGED.

**********************************
FORBIDDEN THING TO DO IN REDUCERS
**********************************

1)MUTATE ARGUMENTS
2)PERFORM SIDE EFFECTS
3)CALL NON-PURE FUNCTIONS(like date.now or math.random ..etc)

=> REDUCERS SOULD RETURN AN UPDATED COPY OF STATE SO THAT REDUX WOULD USE IT
   TO UPDATE THE STORE.

=> ALL REDUCERS ARE CALLED ON EACH DISPATCH AND ONLY THE REDUCER THAT HANDLE THE ACTION
TYPE WILL DO ANYTHING. THE OTHERS ONLY RETURN THE STATE THAT WAS PASSED TO THEM

=> EACH REDUCER HANDLES ITS SLICE OF STATE

=> WHILE THERS IS ONLY A SINGLE STORE FOR REDUX, WE CAN CREATE MULTIPLE REDUCERS TO 
HANDLE DIFFERENT PIECES OF THE STORE IN ISOLATION => THIS PATTERN IS CALLED 
"REDUCER COMPOSITION"

=>EACH ACTION CAN BE HANDLED BY MULTIPE REDUCERS. EACH REDUCER CAN HANDLE MULTIPLE 
ACTIONS.
